{
  "hash": "57dc2a7a6fb82aba5afcd2c7fadc0958",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 5\"\nauthor: \"Leng Yi Xiu\"\ndate: \"Feb 08 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n## 1 Creating Ternary Plot with R\n\n### 1.1 Overview\n\nTernary plots are a way of displaying the distribution and variability of **three-part compositional data**. (For example, the proportion of aged, economy active and young population or sand, silt, and clay in soil.) It’s display is a triangle with sides scaled from 0 to 1. Each side represents one of the three components. A point is plotted so that a line drawn perpendicular from the point to each leg of the triangle intersect at the component values of the point.\n\n### 1.2 Loading R Packages\n\n-   [**ggtern**](http://www.ggtern.com/), a ggplot extension specially designed to plot ternary diagrams. The package will be used to plot static ternary plots.\n\n-   [**Plotly R**](https://plot.ly/r/), an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js . The **plotly R** libary contains the *ggplotly* function, which will convert **ggplot2** figures into a Plotly object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(plotly, ggtern, tidyverse)\n```\n:::\n\n\n### 1.3 Import Data & Data Preparation\n\nImport Data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading the data into R environment\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nPreparing the data to derive 3 new measures:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n```\n:::\n\n\n### 1.4 Plotting Ternary Diagram with R\n\n### 1.4.1 Plotting a static ternary diagram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nTo add labels and theme:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 1.4.2 Plotting an interactive ternary diagram using plot_ly()\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# reusable function for creating annotation object\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNo scatterternary mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f8b2a1df9431b1658137\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f8b2a1df9431b1658137\">{\"x\":{\"visdat\":{\"28b07ceb20be\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"28b07ceb20be\",\"attrs\":{\"28b07ceb20be\":{\"a\":{},\"b\":{},\"c\":{},\"color\":[\"black\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatterternary\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"annotations\":[{\"text\":\"Ternary Markers\",\"x\":0.10000000000000001,\"y\":1,\"ax\":0,\"ay\":0,\"xref\":\"paper\",\"yref\":\"paper\",\"align\":\"center\",\"font\":{\"family\":\"serif\",\"size\":15,\"color\":\"white\"},\"bgcolor\":\"#b3b3b3\",\"bordercolor\":\"black\",\"borderwidth\":2},{\"text\":\"Ternary Markers\",\"x\":0.10000000000000001,\"y\":1,\"ax\":0,\"ay\":0,\"xref\":\"paper\",\"yref\":\"paper\",\"align\":\"center\",\"font\":{\"family\":\"serif\",\"size\":15,\"color\":\"white\"},\"bgcolor\":\"#b3b3b3\",\"bordercolor\":\"black\",\"borderwidth\":2},{\"text\":\"Ternary Markers\",\"x\":0.10000000000000001,\"y\":1,\"ax\":0,\"ay\":0,\"xref\":\"paper\",\"yref\":\"paper\",\"align\":\"center\",\"font\":{\"family\":\"serif\",\"size\":15,\"color\":\"white\"},\"bgcolor\":\"#b3b3b3\",\"bordercolor\":\"black\",\"borderwidth\":2}],\"ternary\":{\"aaxis\":{\"title\":\"Young\",\"tickformat\":\".0%\",\"tickfont\":{\"size\":10}},\"baxis\":{\"title\":\"Active\",\"tickformat\":\".0%\",\"tickfont\":{\"size\":10}},\"caxis\":{\"title\":\"Old\",\"tickformat\":\".0%\",\"tickfont\":{\"size\":10}}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"a\":[1330,5880,5430,4930,1960,3580,2170,4570,1150,6130,2030,19180,7100,11210,9260,9430,8710,1440,6480,8280,7210,1550,6830,2990,4350,4010,2770,3430,5500,6780,3170,420,3020,260,1670,1720,2380,1810,800,3100,3880,2470,1940,2810,3780,5610,2050,8740,8520,1130,8270,6600,5980,1970,1860,2860,3410,1760,1650,2960,120,620,6520,10920,10900,10000,6620,12980,3160,6320,3640,3850,1840,1420,1960,130,30,130,90,8490,7330,2990,6460,1200,6550,10340,7850,6780,7450,3670,12190,120,150,4840,3930,5670,4940,8920,13710,19300,11640,2690,20320,7740,2560,1490,2500,150,2360,2110,2940,10,630,2410,6740,2770,20,30,980,360,270,40,370,7380,1110,860,2850,200,100,10,120,180,2440,1230,10,4220,570,0,9370,16820,2440,11730,16130,70,15940,5790,16050,1380,2930,3090,2350,180,4060,3650,110,170,1140,800,10,50,30,2290,960,720,480,320,60,210,600,0,650,30,270,50,470,260,90,4440,9320,2570,8230,1920,550,14340,6670,17850,18300,18460,2460,3770,5230,8460,4580,3820,0,10,740,510,170,10740,35900,22030,470,1650,2870,370,970,3070,2360,1850,1690,1530,2380,2240,1330,7210,2760,710,230,12150,3200,10730,31770,14070,8330,2330,5470,240,7480,1190,320,17730,9990,13540],\"b\":[2770,16970,15700,13300,3620,9600,4650,12580,2410,14580,4360,48300,15570,27340,19350,23190,22610,3560,17330,18000,16800,3280,16220,8330,9350,9370,5900,8010,11410,16640,7850,910,8660,610,3750,4840,6340,5330,1980,7070,10570,7080,5600,7550,9150,14000,4050,16960,19480,2260,15840,12220,12530,3360,3510,4930,5870,3670,3120,5930,370,820,12890,19140,19690,20320,15130,25120,7860,17070,9420,8970,3380,3390,3480,510,190,510,450,24310,18320,7710,16440,2860,15680,28800,18270,15160,19160,8080,26570,280,540,11110,9510,15270,11830,17800,32920,40760,22960,4960,41410,21590,7150,4930,6980,530,6240,5790,6670,40,1250,5500,15070,5990,200,110,2210,690,580,160,960,19220,2050,1490,5370,390,250,100,270,890,6440,3910,230,8830,1290,0,18550,33140,4480,21430,28870,140,28320,10780,28590,4320,6350,7460,7450,520,8820,9150,140,460,2730,1970,70,210,70,6810,2160,1820,1130,890,140,780,1710,100,1980,90,950,160,1180,1140,140,8480,18720,5520,15810,3590,1000,26160,12930,31820,36400,37430,4880,7790,15440,21410,9730,9720,100,120,1790,1190,390,24500,81520,48300,1090,4050,5320,810,2100,7410,5650,4810,4900,4220,6170,6730,3040,16770,8270,1470,430,21000,7640,20770,58380,24020,18380,6640,9140,550,18000,2350,850,34470,25550,34480],\"c\":[730,5480,5960,4780,1200,3360,1300,4800,640,4270,850,15150,3190,9530,5460,5850,7230,1560,4920,3990,5520,260,3600,1990,1340,2100,1430,1660,2110,3400,3240,100,3510,250,970,1840,2780,2350,410,1960,3510,3120,2260,2450,2740,3320,620,2800,3930,430,2220,1890,3590,1070,880,1320,1390,1060,860,1880,110,50,2100,2830,2180,3370,3510,3350,2830,6130,2780,2930,670,1240,750,220,0,30,70,7240,5530,1600,5170,710,2830,7180,4180,3810,5880,2470,5540,10,220,3350,1800,4550,3170,3500,8240,5650,4050,740,7140,6700,2530,2560,2500,160,2150,1830,1460,10,250,1490,5720,1590,20,10,540,130,150,30,280,5760,750,480,1000,140,100,0,70,450,2070,2200,50,1600,300,170,2650,6040,340,3060,2950,40,4160,910,2870,1760,2040,3020,3410,140,2150,3040,0,20,540,510,20,50,0,2700,390,300,320,260,0,300,520,40,830,0,120,40,530,540,0,1260,2500,400,2170,720,180,3250,1590,4160,5990,5410,1210,2360,4480,7430,1970,2700,20,10,200,100,150,5150,17670,9660,180,800,1240,250,580,3120,2010,1310,1710,1810,2260,2350,1040,4900,3260,260,70,2830,2050,3080,6910,3080,4090,1570,700,150,3560,690,210,4740,5330,7770],\"type\":\"scatterternary\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(0,0,0,1)\",\"line\":{\"color\":\"rgba(0,0,0,1)\"}},\"textfont\":{\"color\":\"rgba(0,0,0,1)\"},\"line\":{\"color\":\"rgba(0,0,0,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## 2 Visual Correlation Analysis\n\n### 2.1 Overview\n\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0.\n\nA correlation coefficient of 1 shows a **perfect linear relationship** between the two variables, while a -1.0 shows a p**erfect inverse relationship** between the two variables. A correlation coefficient of 0.0 shows no linear relationship between the two variables.\n\n3 reasons for computing a correlation matrix:\n\n-   To reveal the relationship between high-dimensional variables pair-wisely\n\n-   To input into other analyses, e.g. people commonly use correlation matrices as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\n\n-   As a diagnostic when checking other analyses.\n\n::: {.callout-tip appearance=\"simple\"}\n[**Corrgram**](http://www.datavis.ca/papers/corrgram.pdf) tend to be used to visually explore and analyse the structure and the patterns of relations among variables. \n\nIt is designed based on two main schemes:\n\n-   Rendering the value of a correlation to depict its sign and magnitude, and\n\n-   Reordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\n:::\n\n### 2.2 Loading R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n```\n:::\n\n\n### 2.3 Import Data & Data Preparation\n\nThe Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of **13 variables** and 6497 observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwine <- read_csv(\"data/wine_quality.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(wine)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n fixed acidity    volatile acidity  citric acid     residual sugar  \n Min.   : 3.800   Min.   :0.0800   Min.   :0.0000   Min.   : 0.600  \n 1st Qu.: 6.400   1st Qu.:0.2300   1st Qu.:0.2500   1st Qu.: 1.800  \n Median : 7.000   Median :0.2900   Median :0.3100   Median : 3.000  \n Mean   : 7.215   Mean   :0.3397   Mean   :0.3186   Mean   : 5.443  \n 3rd Qu.: 7.700   3rd Qu.:0.4000   3rd Qu.:0.3900   3rd Qu.: 8.100  \n Max.   :15.900   Max.   :1.5800   Max.   :1.6600   Max.   :65.800  \n   chlorides       free sulfur dioxide total sulfur dioxide    density      \n Min.   :0.00900   Min.   :  1.00      Min.   :  6.0        Min.   :0.9871  \n 1st Qu.:0.03800   1st Qu.: 17.00      1st Qu.: 77.0        1st Qu.:0.9923  \n Median :0.04700   Median : 29.00      Median :118.0        Median :0.9949  \n Mean   :0.05603   Mean   : 30.53      Mean   :115.7        Mean   :0.9947  \n 3rd Qu.:0.06500   3rd Qu.: 41.00      3rd Qu.:156.0        3rd Qu.:0.9970  \n Max.   :0.61100   Max.   :289.00      Max.   :440.0        Max.   :1.0390  \n       pH          sulphates         alcohol         quality     \n Min.   :2.720   Min.   :0.2200   Min.   : 8.00   Min.   :3.000  \n 1st Qu.:3.110   1st Qu.:0.4300   1st Qu.: 9.50   1st Qu.:5.000  \n Median :3.210   Median :0.5100   Median :10.30   Median :6.000  \n Mean   :3.219   Mean   :0.5313   Mean   :10.49   Mean   :5.818  \n 3rd Qu.:3.320   3rd Qu.:0.6000   3rd Qu.:11.30   3rd Qu.:6.000  \n Max.   :4.010   Max.   :2.0000   Max.   :14.90   Max.   :9.000  \n     type          \n Length:6497       \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n\n### 2.4 Building Correlation Matrix: `pairs()` method\n\n#### 2.4.1 Building a basic correlation matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(wine[,1:11])\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\nColumns 2 to 12 of wine dataframe is used to build the scatterplot matrix. The variables are: fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates and alcohol.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(wine[,2:12])\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.2 Drawing the lower corner\n\n::: {.callout-tip appearance=\"simple\"}\nIt is a common practice to show either the upper half or lower half of the correlation matrix instead of both because a correlation matrix is symmetric.\n\n-   Use upper.panel or lower.panel argument\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(wine[,2:12], upper.panel = NULL)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(wine[,2:12], lower.panel = NULL)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.3 including with correlation coefficients\n\n\n::: {.cell}\n\n```{.r .cell-code}\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### 2.5 Visualising Correlation Matrix: `ggcormat()`\n\n::: {.callout-caution appearance=\"simple\"}\nOne of the major limitation of the correlation matrix is that the scatter plots appear very cluttered when the number of observations is relatively large (i.e. more than 500 observations).\n\n-   **Corrgram** data visualisation technique can be used to overcome this problem\n:::\n\n#### 2.5.1 The basic plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Used to control specific components of the plot\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))\n```\n:::\n\n\n### 2.6 Building multiple plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::",
    "supporting": [
      "Hands-on_Ex05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}