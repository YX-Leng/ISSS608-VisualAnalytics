{
  "hash": "8f12400cfaf22ebd97fab4a9028b39a8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1: \nShip Performance in the Gulf of Guinea\"\nauthor: \"Leng Yi Xiu\"\ndate: \"Feb 01 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n## 1 Overview\n\nThe Gulf of Guinea is a crucial maritime hub, but ship performance is affected by environmental conditions, security risks, and regulatory factors. Strong currents, high humidity, and piracy also impact navigation, fuel efficiency, and operational costs.\n\nKey metrics such as vessel speed, fuel consumption, turnaround time, and security-related delays play a crucial role in determining shipping efficiency. Analyzing these factors is essential for optimizing operations and enhancing maritime security in the region.\n\n### 1.1 The Task\n\nFor this week's article, we will be using various data visualisation techniques to explore the different factors affecting ship performance in the Gulf of Guinea.\n\n### 1.2 The Dataset\n\nThe ship performance dataset ([**Kaggle**](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset)) contains data on essential operational metrics and characteristics of different ship types operating in the Gulf of Guinea.\n\nThe raw dataset consists of **2736 rows** and **24 columns**, with some of the key features below:\n\n::: callout-tip\n## Numerical Features\n\n-   **Speed_Over_Ground_knots**: Average speed of the ship over water (in knots).\n\n-   **Engine_Power_kW**: Engine power output (in kilowatts).\n\n-   **Distance_Traveled_nm**: Total distance traveled by the ship (in nautical miles).\n\n-   **Operational_Cost_USD**: Total operational cost per voyage (in USD).\n\n-   **Revenue_per_Voyage_USD**: Revenue generated per voyage (in USD).\n\n-   **Efficiency_nm_per_kWh**: Energy efficiency calculated in nautical miles per kilowatt-hour.\n:::\n\n::: callout-tip\n## Categorical Features\n\n-   **Ship_Type**: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).\n\n-   **Route_Type**: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).\n\n-   **Engine_Type**: Type of engine (e.g., Diesel, Heavy Fuel Oil).\n\n-   **Maintenance_Status**: Maintenance condition of the ship (e.g., Fair, Critical, Good).\n\n-   **Weather_Condition**: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).\n:::\n\n## 2 Loading R packages and data\n\n### 2.1 Loading R packages\n\nThe following code chunk is used to install necessary packages for this article:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggdist, ggridges, \n               ggthemes, colorspace, ggiraph, \n               ggtext, gganimate, plotly, DT,\n               readxl, gifski, gapminder)\n```\n:::\n\n\n### 2.2 Import Data\n\nImporting the csv data file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- read_csv(\"data/Ship_Performance_Dataset.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 2736 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): Ship_Type, Route_Type, Engine_Type, Maintenance_Status, Weather_C...\ndbl  (12): Speed_Over_Ground_knots, Engine_Power_kW, Distance_Traveled_nm, D...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## 3 Data Preparation\n\nBefore conducting exploratory data analysis, we must first gain a deeper understanding of the dataset and perform essential data preparation steps, including:\n\n1.  Verifying all data types,\n\n2.  Identifying duplicate records, and\n\n3.  Checking for missing values.\n\n### 3.1 Verify Data Types\n\nCode chunk to verify that all data types in the dataset is correct:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglimpse(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 18\n$ Date                    <date> 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               <chr> \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              <chr> \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             <chr> \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      <chr> \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <chr> \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <dbl> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n```\n\n\n:::\n:::\n\n\nTo further understand the categorical features and values used for each feature, the following code chunk is used to list out the unique values for each categorical column:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncategorical_cols <- ship_data %>%\n  select(where(is.character))\n\n# Show unique values for each categorical column\nunique_vals <- categorical_cols %>%\n  map(~ unique(.))\n\nprint(unique_vals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Ship_Type\n[1] \"Container Ship\" \"Fish Carrier\"   \"Bulk Carrier\"   \"None\"          \n[5] \"Tanker\"        \n\n$Route_Type\n[1] \"None\"         \"Short-haul\"   \"Long-haul\"    \"Transoceanic\" \"Coastal\"     \n\n$Engine_Type\n[1] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\"        \"Diesel\"              \n[4] \"None\"                \n\n$Maintenance_Status\n[1] \"Critical\" \"Good\"     \"Fair\"     \"None\"    \n\n$Weather_Condition\n[1] \"Moderate\" \"Rough\"    \"Calm\"     \"None\"    \n```\n\n\n:::\n:::\n\n\n::: callout-caution\n## To Note\n\nAs observed, all the categorical columns have unique value stated as \"None\" which can be interpreted as a missing value in the data.\n\nThis will need to be addressed in 3.3 Check for missing values.\n:::\n\n### 3.2 Identify duplicate records\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nduplicate <- ship_data %>% \n  group_by_all() %>% \n  filter(n()>1) %>% \n  ungroup()\n  \nduplicate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 18\n# ℹ 18 variables: Date <date>, Ship_Type <chr>, Route_Type <chr>,\n#   Engine_Type <chr>, Maintenance_Status <chr>, Speed_Over_Ground_knots <dbl>,\n#   Engine_Power_kW <dbl>, Distance_Traveled_nm <dbl>, Draft_meters <dbl>,\n#   Weather_Condition <chr>, Cargo_Weight_tons <dbl>,\n#   Operational_Cost_USD <dbl>, Revenue_per_Voyage_USD <dbl>,\n#   Turnaround_Time_hours <dbl>, Efficiency_nm_per_kWh <dbl>,\n#   Seasonal_Impact_Score <dbl>, Weekly_Voyage_Count <dbl>, …\n```\n\n\n:::\n:::\n\n\n### 3.3 Check for missing values\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmissing_data <- is.na(ship_data)\n\n# Filter rows where there is at least one TRUE (missing value)\nmissing_row <- ship_data[apply(missing_data, 1, any), ]\nprint(missing_row)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 18\n# ℹ 18 variables: Date <date>, Ship_Type <chr>, Route_Type <chr>,\n#   Engine_Type <chr>, Maintenance_Status <chr>, Speed_Over_Ground_knots <dbl>,\n#   Engine_Power_kW <dbl>, Distance_Traveled_nm <dbl>, Draft_meters <dbl>,\n#   Weather_Condition <chr>, Cargo_Weight_tons <dbl>,\n#   Operational_Cost_USD <dbl>, Revenue_per_Voyage_USD <dbl>,\n#   Turnaround_Time_hours <dbl>, Efficiency_nm_per_kWh <dbl>,\n#   Seasonal_Impact_Score <dbl>, Weekly_Voyage_Count <dbl>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nnone_vals <- ship_data %>%\n  filter(if_any(where(is.character), ~ . == \"None\"))\n\nprint(none_vals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 609 × 18\n   Date       Ship_Type      Route_Type Engine_Type          Maintenance_Status\n   <date>     <chr>          <chr>      <chr>                <chr>             \n 1 2023-06-04 Container Ship None       Heavy Fuel Oil (HFO) Critical          \n 2 2023-07-30 None           Coastal    Heavy Fuel Oil (HFO) Good              \n 3 2023-09-17 Tanker         Long-haul  None                 Good              \n 4 2023-10-22 Container Ship None       Diesel               Critical          \n 5 2023-10-29 Bulk Carrier   Short-haul Diesel               None              \n 6 2023-11-05 None           Coastal    Heavy Fuel Oil (HFO) Good              \n 7 2023-11-19 None           Coastal    Diesel               Good              \n 8 2023-12-03 None           Coastal    Heavy Fuel Oil (HFO) Critical          \n 9 2024-01-14 Bulk Carrier   None       Heavy Fuel Oil (HFO) Critical          \n10 2024-03-24 Tanker         None       Steam Turbine        Critical          \n# ℹ 599 more rows\n# ℹ 13 more variables: Speed_Over_Ground_knots <dbl>, Engine_Power_kW <dbl>,\n#   Distance_Traveled_nm <dbl>, Draft_meters <dbl>, Weather_Condition <chr>,\n#   Cargo_Weight_tons <dbl>, Operational_Cost_USD <dbl>,\n#   Revenue_per_Voyage_USD <dbl>, Turnaround_Time_hours <dbl>,\n#   Efficiency_nm_per_kWh <dbl>, Seasonal_Impact_Score <dbl>,\n#   Weekly_Voyage_Count <dbl>, Average_Load_Percentage <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nship_data_clean <- ship_data %>%\n  filter(!if_any(where(is.character), ~ . == \"None\"))\n\nglimpse(ship_data_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,127\nColumns: 18\n$ Date                    <date> 2023-06-11, 2023-06-18, 2023-06-25, 2023-07-0…\n$ Ship_Type               <chr> \"Fish Carrier\", \"Container Ship\", \"Bulk Carrie…\n$ Route_Type              <chr> \"Short-haul\", \"Long-haul\", \"Transoceanic\", \"Tr…\n$ Engine_Type             <chr> \"Steam Turbine\", \"Diesel\", \"Steam Turbine\", \"D…\n$ Maintenance_Status      <chr> \"Good\", \"Fair\", \"Fair\", \"Fair\", \"Fair\", \"Criti…\n$ Speed_Over_Ground_knots <dbl> 10.38758, 20.74975, 21.05510, 13.74278, 18.616…\n$ Engine_Power_kW         <dbl> 1796.0574, 1648.5567, 915.2618, 1089.7218, 217…\n$ Distance_Traveled_nm    <dbl> 1060.4864, 658.8741, 1126.8225, 1445.2812, 723…\n$ Draft_meters            <dbl> 14.653083, 7.199261, 11.789063, 9.727833, 14.9…\n$ Weather_Condition       <chr> \"Rough\", \"Moderate\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 162.3947, 178.0409, 1737.3853, 260.5951, 1912.…\n$ Operational_Cost_USD    <dbl> 483388.00, 448543.40, 261349.61, 287718.38, 18…\n$ Revenue_per_Voyage_USD  <dbl> 883765.79, 394018.75, 87551.38, 676121.46, 776…\n$ Turnaround_Time_hours   <dbl> 63.24820, 49.41815, 22.40911, 64.15823, 47.476…\n$ Efficiency_nm_per_kWh   <dbl> 0.2903614, 0.4995945, 0.7029057, 1.3313431, 1.…\n$ Seasonal_Impact_Score   <dbl> 0.8856478, 1.4058132, 1.3707043, 0.5833834, 1.…\n$ Weekly_Voyage_Count     <dbl> 6, 9, 1, 8, 7, 3, 6, 2, 9, 4, 3, 7, 7, 2, 4, 3…\n$ Average_Load_Percentage <dbl> 93.89537, 96.21824, 66.19370, 80.00858, 53.174…\n```\n\n\n:::\n:::\n\n\n## 4 Exploratory Data Analysis\n\n### 4.1 Univariate: Frequency Counts for all features\n\n::: callout-important\n## Observations\n\n-   Use of bar charts to look at the distribution of data across all categorical features\n-   Data observed is generally evenly distributed and each categorical feature is evenly represented\n:::\n\n::: panel-tabset\n## Categorical Features\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Select categorical columns\ncat_cols <- c(\"Ship_Type\", \"Route_Type\", \"Engine_Type\", \"Maintenance_Status\", \"Weather_Condition\")\n\n# Pivot data to long format\nship_data_categorical <- ship_data_clean %>%\n  select(all_of(cat_cols)) %>%\n  pivot_longer(cols = everything(), names_to = \"variable\", values_to = \"category\")\n\n# Plot faceted bar charts\nggplot(ship_data_categorical, aes(x = category, fill = variable)) +\n  geom_bar(color = \"black\") +\n  geom_text(stat = \"count\", aes(label = after_stat(count)), hjust = -0.2, size = 2.5) +\n  coord_flip(clip = \"off\", expand = FALSE) +\n  facet_wrap(~variable, scales = \"free_y\") +  \n  theme_minimal(base_size = 10) +\n  scale_fill_brewer(palette = \"Set3\") +\n  labs(title = \"Distribution of Categorical Features\",\n       x = \"Category\",\n       y = \"Count\") +\n  theme(legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", hjust = 0.5, size = 10))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Numeric Features\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Pivot data to long format\nship_data_numeric <- ship_data_clean %>%\n  pivot_longer(cols = where(is.numeric), \n               names_to = \"Feature\", \n               values_to = \"Numeric\")\n\n# Plot faceted histograms\nggplot(ship_data_numeric, aes(x = Numeric, fill = Feature)) +\n  geom_histogram(color = \"black\", bins = 30, alpha = 0.7) +  \n  facet_wrap(~Feature, scales = \"free\") +  \n  theme_minimal(base_size = 10) +\n  scale_fill_brewer(palette = \"Set3\") +\n  labs(title = \"Distribution of Numeric Features\",\n       x = \"Value\",\n       y = \"Frequency\") +\n  theme(legend.position = \"none\",\n        strip.text = element_text(size = 10),\n        plot.title = element_text(face = \"bold\", size = 10, hjust = 0.5),\n        plot.margin = margin(10, 10, 10, 10))  \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n:::\n\n### 4.2 Visualizing Correlation Matrix of Numeric Features\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nship_data_clean[, c(6:9, 11:18)] <- scale(ship_data_clean[, c(6:9, 11:18)])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggstatsplot::ggcorrmat(\n  data = ship_data_clean, \n  cor.vars = c(6:9, 11:18),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for Ship Data\",\n  subtitle = \"All pairs: no significant at p < 0.05\"\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### 4.3 Bivariate: Factors affecting Numeric Features\n\n::: panel-tabset\n## Ship Type\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Boxplot with facets\nggplot(data = ship_data_numeric, \n       aes(y = Numeric, x = Ship_Type)) +  # x maps to Ship_Type\n  geom_boxplot(outlier.shape = 16,  \n               outlier.colour = \"blue\",  \n               outlier.size = 1) +       \n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"pink\",          \n             size=3) +\n  labs(title = \"Box Plots of All Numeric Features by Ship Type\") +\n  facet_wrap(~Feature, scales = \"free_y\") +\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    strip.text = element_text(size = 8, lineheight = 1.1),\n    plot.margin = margin(10, 10, 10, 10),  \n    panel.spacing = unit(0.5, \"lines\")  \n   )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Route Type\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Boxplot with facets\nggplot(data = ship_data_numeric, \n       aes(y = Numeric, x = Route_Type)) +  # x maps to Route Type\n  geom_boxplot(outlier.shape = 16,  \n               outlier.colour = \"blue\",  \n               outlier.size = 1) +       \n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"pink\",          \n             size=3) +\n  labs(title = \"Box Plots of All Numeric Features by Route Type\") +\n  facet_wrap(~Feature, scales = \"free_y\") +\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    strip.text = element_text(size = 8, lineheight = 1.1),\n    plot.margin = margin(10, 10, 10, 10),  \n    panel.spacing = unit(0.5, \"lines\")  \n   )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Engine Type\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Boxplot with facets\nggplot(data = ship_data_numeric, \n       aes(y = Numeric, x = Engine_Type)) +  # x maps to Engine_Type\n  geom_boxplot(outlier.shape = 16,  \n               outlier.colour = \"blue\",  \n               outlier.size = 1) +       \n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"pink\",          \n             size=3) +\n  labs(title = \"Box Plots of All Numeric Features by Engine Type\") +\n  facet_wrap(~Feature, scales = \"free_y\") +\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    strip.text = element_text(size = 8, lineheight = 1.1),\n    plot.margin = margin(10, 10, 10, 10),  \n    panel.spacing = unit(0.5, \"lines\")  \n   )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Maintenance Status\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Boxplot with facets\nggplot(data = ship_data_numeric, \n       aes(y = Numeric, x = Maintenance_Status)) +  # x maps to Maintenance Status\n  geom_boxplot(outlier.shape = 16,  \n               outlier.colour = \"blue\",  \n               outlier.size = 1) +       \n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"pink\",          \n             size=3) +\n  labs(title = \"Box Plots of All Numeric Features by Maintenance Status\") +\n  facet_wrap(~Feature, scales = \"free_y\") +\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    strip.text = element_text(size = 8, lineheight = 1.1),\n    plot.margin = margin(10, 10, 10, 10),  \n    panel.spacing = unit(0.5, \"lines\")  \n   )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Weather Conditions\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Boxplot with facets\nggplot(data = ship_data_numeric, \n       aes(y = Numeric, x = Weather_Condition)) +  # x maps to Weather Conditions\n  geom_boxplot(outlier.shape = 16,  \n               outlier.colour = \"blue\",  \n               outlier.size = 1) +       \n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"pink\",          \n             size=3) +\n  labs(title = \"Box Plots of All Numeric Features by Weather Conditions\") +\n  facet_wrap(~Feature, scales = \"free_y\") +\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    strip.text = element_text(size = 8, lineheight = 1.1),\n    plot.margin = margin(10, 10, 10, 10),  \n    panel.spacing = unit(0.5, \"lines\")  \n   )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n:::\n\n### 4.4\n\n### 4.5\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}